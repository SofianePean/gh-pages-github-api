{"version":3,"sources":["components/SearchBar/index.js","components/MessageDiv/index.js","components/ReposResults/ReposResult.js","components/ReposResults/index.js","components/Header/index.js","components/Spinner/index.js","components/GithubAPI/index.js","index.js"],"names":["SearchBar","props","useState","inputSearch","setinputSearch","className","onSubmit","event","preventDefault","Input","icon","placeholder","value","onChange","currentTarget","MessageDiv","nbDataRepo","Message","visible","valueDataRepos","message","getMessage","ReposResult","name","description","image","fullName","Card","Image","src","wrapped","ui","Content","Header","Meta","Description","ReposResults","repositories","map","repo","full_name","owner","avatar_url","id","Icon","size","color","disabled","Spinner","Loader","active","inline","GithubAPI","dataRepos","setdataRepos","setNbDataRepo","loading","setLoading","valueInput","axios","get","then","response","data","items","total_count","catch","e","console","log","getDataFromAPI","rootReactElement","target","document","getElementById","render"],"mappings":"0SAoCeA,G,OA5BG,SAACC,GAAW,IAAD,EACWC,mBAAS,IADpB,mBACpBC,EADoB,KACPC,EADO,KAc3B,OACE,sBAAMC,UAAU,aAAaC,SAZV,SAACC,GACpBA,EAAMC,iBACNP,EAAMK,UAAYL,EAAMK,SAASH,GACjCC,EAAe,KASf,SACE,cAACK,EAAA,EAAD,CACEJ,UAAU,mBACVK,KAAK,SACLC,YAAY,YACZC,MAAOT,EACPU,SAZgB,SAACN,GAAW,IACxBK,EAAUL,EAAMO,cAAhBF,MACRR,EAAeQ,U,SCeJG,G,OAzBI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAWpB,OACE,qBAAKX,UAAU,UAAf,SACE,cAACY,EAAA,EAAD,CAASZ,UAAU,UAAUa,SAAO,EAApC,SAZe,SAACC,GAClB,IAAIC,EAAU,GAOd,OALEA,GADED,GAAkB,EACT,kDAGJ,kCAA4BH,EAA5B,iBAM+BK,CAAWL,S,yBCYxCM,G,MAzBK,SAAC,GAAD,IAClBC,EADkB,EAClBA,KAAMC,EADY,EACZA,YAAaC,EADD,EACCA,MAAOC,EADR,EACQA,SADR,OAGlB,eAACC,EAAA,EAAD,CAAMtB,UAAU,OAAhB,UACE,cAACuB,EAAA,EAAD,CAAOC,IAAKJ,EAAOK,SAAO,EAACC,IAAI,IAC/B,eAACJ,EAAA,EAAKK,QAAN,WACE,cAACL,EAAA,EAAKM,OAAN,UAAcV,IACd,cAACI,EAAA,EAAKO,KAAN,UACE,sBAAM7B,UAAU,OAAhB,SAAwBqB,MAE1B,cAACC,EAAA,EAAKQ,YAAN,UACGX,YCaMY,EAxBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACnB,qBAAKhC,UAAU,mBAAf,SAEIgC,EAAaC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,aAEEb,SAAUa,EAAKC,UACff,MAAOc,EAAKE,MAAMC,YACdH,GAHCA,EAAKI,U,QCELV,G,OARA,kBACb,sBAAK5B,UAAU,SAAf,UACE,cAACuC,EAAA,EAAD,CAAMvC,UAAU,cAAcwC,KAAK,OAAOC,MAAM,QAAQC,UAAQ,EAACxB,KAAK,WACtE,oBAAIlB,UAAU,eAAd,yB,SCLW2C,G,OAFC,kBAAM,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,WAAW9C,UAAU,UAAUwC,KAAK,cCgDjEO,G,OAtCG,WAAO,IAAD,EACYlD,mBAAS,IADrB,mBACfmD,EADe,KACJC,EADI,OAEcpD,mBAAS,IAFvB,mBAEfc,EAFe,KAEHuC,EAFG,OAGQrD,oBAAS,GAHjB,mBAGfsD,EAHe,KAGNC,EAHM,KAwBtB,OACE,sBAAKpD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWC,SAPE,SAACoD,IAdK,SAACA,GACtBD,GAAW,GACXE,IACGC,IALO,gDAKGF,GACVG,MAAK,SAACC,GACLR,EAAaQ,EAASC,KAAKC,OAC3BT,EAAcO,EAASC,KAAKE,aAC5BR,GAAW,MAEZS,OAAM,SAACC,GACNV,GAAW,GACXW,QAAQC,IAAI,gBAAiBF,EAAE/C,YAInCkD,CAAeZ,MAOb,cAAC,EAAD,CAAY1C,WAAYA,IACvBwC,GAAW,cAAC,EAAD,KACVA,GACA,cAAC,EAAD,CAAcnB,aAAcgB,SCjC9BkB,EAAmB,cAAC,EAAD,IAEnBC,EAASC,SAASC,eAAe,QAEvCC,iBAAOJ,EAAkBC,I","file":"static/js/main.0bf2f9e3.chunk.js","sourcesContent":["// == Import npm\nimport React, { useState } from 'react';\nimport { Input } from 'semantic-ui-react';\n\n// == Import\nimport './SearchBar.scss';\n\n// == Composant\nconst SearchBar = (props) => {\n  const [inputSearch, setinputSearch] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit && props.onSubmit(inputSearch);\n    setinputSearch('');\n  };\n\n  const OnInputChange = (event) => {\n    const { value } = event.currentTarget;\n    setinputSearch(value);\n  };\n\n  return (\n    <form className=\"search-bar\" onSubmit={handleSubmit}>\n      <Input\n        className=\"search-bar-input\"\n        icon=\"search\"\n        placeholder=\"Search...\"\n        value={inputSearch}\n        onChange={OnInputChange}\n      />\n    </form>\n  );\n};\n\n// == Export\nexport default SearchBar;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from 'semantic-ui-react';\n\n// == Import\nimport './Message.scss';\n\n// == Composant\nconst MessageDiv = ({ nbDataRepo }) => {\n  const getMessage = (valueDataRepos) => {\n    let message = '';\n    if (valueDataRepos <= 0) {\n      message += 'Vous n\\'avez pas encore effectué de recherche';\n    }\n    else {\n      message += `La recherche a donné ${nbDataRepo} résultats`;\n    }\n    return message;\n  };\n  return (\n    <div className=\"message\">\n      <Message className=\"message\" visible>{getMessage(nbDataRepo)}</Message>\n    </div>\n  );\n};\n\nMessageDiv.propTypes = {\n  nbDataRepo: PropTypes.arrayOf(\n\n  ).isRequired,\n};\n\n// == Export\nexport default MessageDiv;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Image } from 'semantic-ui-react';\n\n// == Import\nimport './ReposResults.scss';\n\n// == Composant\nconst ReposResult = ({\n  name, description, image, fullName,\n}) => (\n  <Card className=\"card\">\n    <Image src={image} wrapped ui={false} />\n    <Card.Content>\n      <Card.Header>{name}</Card.Header>\n      <Card.Meta>\n        <span className=\"date\">{fullName}</span>\n      </Card.Meta>\n      <Card.Description>\n        {description}\n      </Card.Description>\n    </Card.Content>\n  </Card>\n);\n\nReposResult.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n};\n\n// == Export\nexport default ReposResult;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReposResult from './ReposResult';\n\n// == Import\nimport './ReposResults.scss';\n\n// == Composant\nconst ReposResults = ({ repositories }) => (\n  <div className=\"reposresult-list\">\n    {\n      repositories.map((repo) => (\n        <ReposResult\n          key={repo.id}\n          fullName={repo.full_name}\n          image={repo.owner.avatar_url}\n          {...repo}\n        />\n      ))\n    }\n  </div>\n);\n\nReposResults.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\n// == Export\nexport default ReposResults;\n","// == Import npm\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\n// == Import\nimport './Header.scss';\n\n// == Composant\nconst Header = () => (\n  <div className=\"header\">\n    <Icon className=\"header-icon\" size=\"huge\" color=\"black\" disabled name=\"github\" />\n    <h1 className=\"header-title\">GitHub</h1>\n  </div>\n);\n\n// == Export\nexport default Header;\n","import React from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport './Spinner.scss';\n\nconst Spinner = () => <Loader active inline=\"centered\" className=\"spinner\" size=\"massive\" />;\n\nexport default Spinner;\n","// == Import npm\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from '../SearchBar';\nimport MessageDiv from '../MessageDiv';\nimport ReposResults from '../ReposResults';\nimport Header from '../Header';\nimport Spinner from '../Spinner';\n\n\n// == Import\nimport './GithubAPI.scss';\n\n// == Composant\nconst GithubAPI = () => {\n  const [dataRepos, setdataRepos] = useState([]);\n  const [nbDataRepo, setNbDataRepo] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const url = 'https://api.github.com/search/repositories?q=';\n\n  const getDataFromAPI = (valueInput) => {\n    setLoading(true);\n    axios\n      .get(url + valueInput)\n      .then((response) => {\n        setdataRepos(response.data.items);\n        setNbDataRepo(response.data.total_count);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setLoading(false);\n        console.log('Error message', e.message);\n      });\n  };\n  const onSubmit = (valueInput) => {\n    getDataFromAPI(valueInput);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <SearchBar onSubmit={onSubmit} />\n      <MessageDiv nbDataRepo={nbDataRepo} />\n      {loading && <Spinner />}\n      {!loading && (\n        <ReposResults repositories={dataRepos} />\n      )}\n    </div>\n  );\n};\n\n// == Export\nexport default GithubAPI;\n","// == Import : npm\nimport React from 'react';\nimport { render } from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\n// == Import : local\n// Composants\nimport GithubAPI from './components/GithubAPI';\n\n// == Render\n// 1. Élément React racine (celui qui contient l'ensemble de l'app)\n//    => crée une structure d'objets imbriqués (DOM virtuel)\nconst rootReactElement = <GithubAPI />;\n// 2. La cible du DOM (là où la structure doit prendre vie dans le DOM)\nconst target = document.getElementById('root');\n// 3. Déclenchement du rendu de React (virtuel) => DOM (page web)\nrender(rootReactElement, target);\n"],"sourceRoot":""}